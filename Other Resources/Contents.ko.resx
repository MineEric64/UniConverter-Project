<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HelloWorld" xml:space="preserve">
    <value>안녕, 세상아!</value>
  </data>
  <data name="LED_Converted" xml:space="preserve">
    <value>LED가 성공적으로 변환되었습니다!</value>
  </data>
  <data name="LED_Converting" xml:space="preserve">
    <value>에이블톤 LED를 유니팩 LED로 변환 중...</value>
  </data>
  <data name="LED_Converting_Error" xml:space="preserve">
    <value>LED 변환 중에 오류가 발생했습니다.

오류 내용:
{0}</value>
  </data>
  <data name="LED_Converting_Title" xml:space="preserve">
    <value>LED 변환 중...</value>
  </data>
  <data name="LED_Loaded" xml:space="preserve">
    <value>LED 파일이 로딩되었습니다! 'keyLED (미디 익스텐션)' 탭에서 LED를 편집할 수 있습니다.</value>
  </data>
  <data name="LED_Not_Found" xml:space="preserve">
    <value>프로젝트에서 LED를 찾지 못했습니다.</value>
  </data>
  <data name="LED_ofd_Filter" xml:space="preserve">
    <value>LED 파일|*.mid</value>
  </data>
  <data name="LED_ofd_Title" xml:space="preserve">
    <value>LED 파일을 선택하세요</value>
  </data>
  <data name="LED_Open" xml:space="preserve">
    <value>LED 파일을 불러오는 중... ({0} / {1})</value>
  </data>
  <data name="LED_Open_Title" xml:space="preserve">
    <value>LED 파일을 불러오는 중</value>
  </data>
  <data name="LED_Save_File_Not_Found" xml:space="preserve">
    <value>이 프로젝트의 LED는 미디 익스텐션 플러그인을 활용하여 만들어졌습니다.
그런데 미디 익스텐션 데이터 파일을 찾지 못하였습니다.

직접 데이터 파일을 선택하여 변환을 계속하시겠습니까?
(보통 데이터 파일은 LED 파일 (.mid 확장자) 폴더에 있고 확장자가 없으며 파일 이름에 'save'가 포함되어있습니다)</value>
  </data>
  <data name="LED_Verifying" xml:space="preserve">
    <value>LED 확인 중... ({0} / {1})</value>
  </data>
  <data name="Main_OpenAbletonProject" xml:space="preserve">
    <value>에이블톤 프로젝트 열기</value>
  </data>
  <data name="Main_OpenAbletonProject_Beta" xml:space="preserve">
    <value>에이블톤 프로젝트 열기 (베타)</value>
  </data>
  <data name="Project_Chain" xml:space="preserve">
    <value>체인을 찾는 중...</value>
  </data>
  <data name="Project_ChangeExtension" xml:space="preserve">
    <value>읽을 수 있는 정보로 적용하는 중...</value>
  </data>
  <data name="Project_DeleteWorkspace" xml:space="preserve">
    <value>임시 작업 공간을 삭제하는 중...</value>
  </data>
  <data name="Project_DeletingTempoaryFiles" xml:space="preserve">
    <value>임시 파일을 삭제하는 중...</value>
  </data>
  <data name="Project_Extracting" xml:space="preserve">
    <value>프로젝트 파일 압축 푸는 중...</value>
  </data>
  <data name="Project_FileName" xml:space="preserve">
    <value>파일 이름을 찾는 중...</value>
  </data>
  <data name="Project_Loaded" xml:space="preserve">
    <value>에이블톤 프로젝트 파일이 로딩되었습니다!
'정보' 탭에서 정보를 수정할 수 있습니다.</value>
  </data>
  <data name="Project_Loading" xml:space="preserve">
    <value>프로젝트 파일을 불러오는 중...</value>
  </data>
  <data name="Project_ofd_Filter" xml:space="preserve">
    <value>에이블톤 프로젝트 파일|*.als</value>
  </data>
  <data name="Project_ofd_Title" xml:space="preserve">
    <value>에이블톤 프로젝트 파일을 선택하세요</value>
  </data>
  <data name="Project_Reset" xml:space="preserve">
    <value>프로젝트를 초기화하는 중...</value>
  </data>
  <data name="Project_sfd_Filter" xml:space="preserve">
    <value>Zip 파일|*.zip|유니팩 파일|*.uni</value>
  </data>
  <data name="Project_sfd_Title" xml:space="preserve">
    <value>유니팩 파일을 어디다 저장할지 선택하세요</value>
  </data>
  <data name="Project_Title" xml:space="preserve">
    <value>에이블톤 프로젝트 파일을 불러오는 중...</value>
  </data>
  <data name="Sound_Loaded" xml:space="preserve">
    <value>사운드 파일들을 불러왔습니다!</value>
  </data>
  <data name="Sound_ofd_Filter" xml:space="preserve">
    <value>wav 파일|*.wav|mp3 파일|*.mp3|모든 사운드 파일|*.*</value>
  </data>
  <data name="Sound_ofd_Title" xml:space="preserve">
    <value>음악 파일을 선택하세요</value>
  </data>
  <data name="Sound_Open" xml:space="preserve">
    <value>사운드 파일을 불러오는 중... ({0} / {1})</value>
  </data>
  <data name="Sound_Open_Title" xml:space="preserve">
    <value>사운드 파일을 불러오는 중...</value>
  </data>
</root>